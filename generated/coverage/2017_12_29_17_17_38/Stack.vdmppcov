class Stack
instance variables
	private contents : seq of int := [];
	private capacity: nat;
	inv len contents <= capacity;
operations
 	public Stack: nat ==> Stack
 		Stack(c) == (capacity := c; return self)
 		post contents = [] and capacity = c;
 	public clear: () ==> ()
 		clear() == contents := [];
 	public push: int ==> ()
 		push(x) == contents := [x] ^ contents
 		pre len contents < capacity
 		post contents = [x] ^ contents~;
 	public pop: () ==> ()
 		pop() == contents := tl contents
 		pre contents <> []
 		post contents = tl contents~;
 	public top: () ==> int
 		top() == return hd contents
 		pre contents <> []
 		post RESULT = hd contents;
end Stack