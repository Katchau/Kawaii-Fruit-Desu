class Client
instance variables
  public name: Utils`string;
  public hasPaidAnual: bool; 
  public hasCollected: bool; 
  public hasCancelled: bool; 
  public undefinedCollective: bool; 
  public collective: Collective; 
  public undefinedBasket: bool;
  public basketReceived: Basket; 
  public basketRequest: Utils`BasketType; 

operations
	public Client: Utils`string * Utils`BasketType ==> Client
		Client(n, type) == ( 
      name := n; 
      basketRequest := type; 
      hasPaidAnual := false; 
      hasCollected := false; 
      hasCancelled := false; 
      undefinedCollective := true;
      undefinedBasket := true;
      --collective := undefined; 
      --basketReceived := undefined; 
    ) 
		pre len n > 0
		post name = n and basketRequest = type;

   public applyCollective : Collective ==> bool 
 	 applyCollective(c) == (
			undefinedCollective := not c.addAssociate(self);
			collective := c;
			return not (undefinedCollective)
   )
   post undefinedCollective = false;

  public  getBasket : ()  ==> () 
  getBasket() ==  (
  	dcl possibleBasket: Basket;
  
  	possibleBasket := collective.collectBasket(self);
  	
    if not undefinedBasket
   		 then basketReceived := possibleBasket
    )
  pre hasCollected = false and not undefinedCollective = true
  post if hasCollected = true then (not undefinedBasket and hasCollected )
  				else (undefinedBasket and not hasCollected); 

	 public  quitCollective : ()  ==> bool
  quitCollective() == (
  	collective.removeAssociate(self);
  	return undefinedCollective;
  )
  pre undefinedCollective = false
  post undefinedCollective = true;

  public cancelBasket : ()  ==> () 
  cancelBasket() == hasCancelled := true 
  post hasCancelled = true; 

	public setHasCollected: bool ==> () 
  setHasCollected(hc) == hasCollected := hc 
  post hasCollected = hc; 
  
	public setUndefinedCollective: bool ==> () 
  setUndefinedCollective(uc) == undefinedCollective := uc 
  post undefinedCollective = uc; 
  
  public setUndefinedBasket: bool ==> () 
  setUndefinedBasket(ub) == undefinedBasket:= ub 
  post undefinedBasket = ub; 
  
  public newWeek: () ==> ()
  newWeek() == (hasCollected := false; hasCancelled := false; undefinedBasket := true);
  
  public newYear: () ==> ()
  newYear() == (hasCollected := false; hasCancelled := false; undefinedBasket := true; hasPaidAnual := false);

end Client
